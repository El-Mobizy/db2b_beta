{
    "openapi": "3.0.0",
    "info": {
        "title": "db2b-api",
        "description": "Développement d'une plateforme B2B multilingue complète",
        "contact": {
            "email": "ayenaaurel15@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/ad/ads": {
            "get": {
                "tags": [
                    "Ad"
                ],
                "summary": "Get all ads",
                "description": "Returns a list of all ads",
                "operationId": "0e4a79e0ae065f2a31062c012874bb8e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ad/all": {
            "get": {
                "tags": [
                    "Ad"
                ],
                "summary": "Get all ads.",
                "description": "Get All ads.",
                "operationId": "6d7a70fa6a668c6622dfc18b299cdbb8",
                "responses": {
                    "200": {
                        "description": "Success. Return all ads.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Serveur error."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/all/{perpage}": {
            "get": {
                "tags": [
                    "Ad"
                ],
                "summary": "Get recent ads.",
                "description": "Get recent ads.",
                "operationId": "16c596848b49b7789279bd8a67d85fa5",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of ad per page.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. Return all recent ads.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Serveur error."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/marchand/{perpage}": {
            "get": {
                "tags": [
                    "Ad"
                ],
                "summary": "Get all seller ads.",
                "description": "Get All ads.",
                "operationId": "7bdefb252008592fd2318c548e69adc2",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of element perpage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. Return all seller ads.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Serveur error."
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/destroyAd/{uid}": {
            "post": {
                "tags": [
                    "Ad"
                ],
                "summary": "Delete an ad",
                "description": "Deletes an ad using its UID",
                "operationId": "destroyAd",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "UID of the ad to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ad deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ad deleted successfully !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - User is not allowed to delete this ad",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You can't delete an ad that you don't belong to"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - No ad found with the specified UID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No ad found with the specified UID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "203": {
                        "description": "You can't delete a ad because it belong to a order",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No ad found with the specified UID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error - An error occurred while deleting the ad",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/storeAd": {
            "post": {
                "tags": [
                    "Ad"
                ],
                "summary": "Create a new ad",
                "operationId": "bb2a41d34a4a6df9f03ef86f694a3ed7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "location_id",
                                    "value_entered",
                                    "price",
                                    "shop_id"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the advertisement",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "ID of the location",
                                        "type": "integer"
                                    },
                                    "category_id": {
                                        "description": "ID of the category",
                                        "type": "integer"
                                    },
                                    "value_entered": {
                                        "description": "Array of entered values for ad attributes",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "image": {
                                        "description": "Array of files to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "price": {
                                        "description": "Price of the item",
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "shop_id": {
                                        "description": "ID of the shop",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ad added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "ad added successfully !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Resource not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An internal server error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/editAd/{uid}": {
            "post": {
                "tags": [
                    "Ad"
                ],
                "summary": "Edit an existing ad",
                "operationId": "f3ff816fbcd6e65a6d166eb27ae26c02",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "UID of the ad to edit",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New ad title"
                                    },
                                    "location_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1
                                    },
                                    "value_entered[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ad edited successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ad edited successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/checkAdTitle/{title}/{shopId}": {
            "get": {
                "tags": [
                    "Ad"
                ],
                "summary": "Check if an ad title already exists for a user in a specific shop",
                "operationId": "51f8b73092b9fb6cc66a763e6bedc502",
                "parameters": [
                    {
                        "name": "title",
                        "in": "path",
                        "description": "The title of the ad to check",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "shopId",
                        "in": "path",
                        "description": "The ID of the shop",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ad does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Ad does not exist in the shop"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad already exists in the shop",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You already added this ad in your shop Shop Title"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/validateAd/{uid}": {
            "post": {
                "tags": [
                    "Ad"
                ],
                "summary": "Validate an ad",
                "operationId": "023a2ffc22fddc592c679f8cb75a5913",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "UID of the ad",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Ad validated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ad validated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ad not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Statut of ad must be pending. Please, check it !",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Statut of ad must be pending. Please, check it !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/rejectAd/{uid}": {
            "post": {
                "tags": [
                    "Ad"
                ],
                "summary": "Reject an ad",
                "description": "Reject an ad.",
                "operationId": "rejectAd",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "The UID of the ad",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "reject_reason": {
                                        "description": "The reason for rejecting the ad",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ad rejected successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Ad not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/getAdDetail/{adUid}": {
            "get": {
                "tags": [
                    "Ad"
                ],
                "summary": "Get ad details",
                "description": "Retrieve detailed information about an advertisement by its UID.",
                "operationId": "63e99983eeeee67d0e40905362f85896",
                "parameters": [
                    {
                        "name": "adUid",
                        "in": "path",
                        "description": "UID of the advertisement",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Ad Title"
                                                    },
                                                    "ad_code": {
                                                        "type": "string",
                                                        "example": "AD123456"
                                                    },
                                                    "final_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 99.99
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "description"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "http://example.com/image.jpg"
                                                    },
                                                    "owner_uid": {
                                                        "type": "string",
                                                        "example": "UID12345"
                                                    },
                                                    "shop_uid": {
                                                        "type": "string",
                                                        "example": "SHOP12345"
                                                    },
                                                    "shop_title": {
                                                        "type": "string",
                                                        "example": "Shop Title"
                                                    },
                                                    "files": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": ""
                                                        }
                                                    },
                                                    "category_uid": {
                                                        "type": "string",
                                                        "example": "CAT12345"
                                                    },
                                                    "category_title": {
                                                        "type": "string",
                                                        "example": "Category Title"
                                                    },
                                                    "attributes": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": ""
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ad not found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/getAdBySubCategory/{categoryUid}": {
            "get": {
                "tags": [
                    "Ad"
                ],
                "summary": "Get ads by subcategory",
                "description": "Retrieve a list of ads grouped by category",
                "operationId": "adaa351c09719ef8d4de84934c550df2",
                "parameters": [
                    {
                        "name": "categoryUid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ad list grouped by category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "category": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found or subcategory required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ad/addInventoryToAd/{adUid}": {
            "post": {
                "tags": [
                    "Ad"
                ],
                "summary": "Add inventory to ad",
                "description": "Add inventory to an existing ad",
                "operationId": "eda8e6d8c09c168368b494a0bc59bf07",
                "parameters": [
                    {
                        "name": "adUid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "type": "integer"
                                    },
                                    "threshold": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inventory added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Quantity must be an integer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "406": {
                        "description": "Threshold must be an integer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/updateAdDetail/{adUid}": {
            "post": {
                "tags": [
                    "Ad"
                ],
                "summary": "Update AdDetail",
                "description": "Met à jour la valeur d'un détail d'annonce.",
                "operationId": "1d7e3d6bccce3fd5ca7663d342dfcecc",
                "parameters": [
                    {
                        "name": "adUid",
                        "in": "path",
                        "description": "L'UID du détail d'annonce à mettre à jour.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "newValue": {
                                        "type": "string",
                                        "example": "Nouvelle valeur"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Détail d'annonce mis à jour avec succès.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "AdDetail updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Mauvaise demande. Vérifiez les données fournies.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid UUID provided."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Détail d'annonce non trouvé.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "AdDetail not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Message d'erreur."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/createAddress": {
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "Create a new address for the authenticated user",
                "operationId": "f15cc7a3d187ca271a59ca2f4bd97fad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Home"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "example": "40.712776"
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "example": "-74.005974"
                                    },
                                    "formatted_address": {
                                        "type": "string",
                                        "example": "New York, NY, USA"
                                    },
                                    "place_id": {
                                        "type": "string",
                                        "example": "ChIJrTLr-GyuEmsRBfy61i59si0"
                                    },
                                    "is_default": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": ""
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/getAddress/{addressUid}": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get a specific address by UID for the authenticated user",
                "operationId": "bd754913a02dfae7e90dc6994c0301ae",
                "parameters": [
                    {
                        "name": "addressUid",
                        "in": "path",
                        "description": "The UID of the address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Detail of specific address",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": ""
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/getAllAuthAddresses": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get all addresses for the authenticated user",
                "operationId": "b09f17b6218bc995047015ea455bdb5f",
                "responses": {
                    "200": {
                        "description": "Auth user addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/getAllUserAddresses/{userUid}": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get all addresses for a specific user by their UID",
                "operationId": "b5f810d8ddd3932596fb41f342e1187e",
                "parameters": [
                    {
                        "name": "userUid",
                        "in": "path",
                        "description": "The UID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specific user addresses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/updateAddress/{addressUid}": {
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "Update a specific address by UID for the authenticated user",
                "operationId": "9b97f77c2fb6f8d6db29831d69981269",
                "parameters": [
                    {
                        "name": "addressUid",
                        "in": "path",
                        "description": "The UID of the address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Home"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "example": "40.712776"
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "example": "-74.005974"
                                    },
                                    "formatted_address": {
                                        "type": "string",
                                        "example": "New York, NY, USA"
                                    },
                                    "place_id": {
                                        "type": "string",
                                        "example": "ChIJrTLr-GyuEmsRBfy61i59si0"
                                    },
                                    "is_default": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Address updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": ""
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/deleteAddress/{id}": {
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "Delete a specific address by ID for the authenticated user",
                "operationId": "133c3ebc59d61b8c1a27f2f0f269cc9f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the address",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address deleted successfully"
                    },
                    "404": {
                        "description": "Address not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/activateAddress/{addressUid}": {
            "post": {
                "tags": [
                    "Address"
                ],
                "summary": "Activate a specific address by UID for the authenticated user",
                "operationId": "b2fc609242ecd9b005722882be191fa6",
                "parameters": [
                    {
                        "name": "addressUid",
                        "in": "path",
                        "description": "The UID of the address",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address activated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": ""
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/getActiveService": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get active service of the authenticated user",
                "operationId": "7703b7fdcd796fd56df24ef42b86ff5e",
                "responses": {
                    "200": {
                        "description": "Successful response with active service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "user_id": 5,
                                                "is_default": true
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active service retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active service found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No active service found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/address/getUserActiveService/{userUid}": {
            "get": {
                "tags": [
                    "Address"
                ],
                "summary": "Get active service of a specific user by UID",
                "operationId": "51d7e02251fe7461ddc1b08e0053fc33",
                "parameters": [
                    {
                        "name": "userUid",
                        "in": "path",
                        "description": "UID of the user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response with active service",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": {
                                                "id": 1,
                                                "user_id": 5,
                                                "is_default": true
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active service retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active service found for the specified user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No active service found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/addToCart/{adId}": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add to Cart",
                "description": "Add an advertisement to the authenticated user's cart.",
                "operationId": "addToCart",
                "parameters": [
                    {
                        "name": "adId",
                        "in": "path",
                        "description": "ID of the advertisement to add to the cart",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product added to cart successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/removeToCart/{adId}": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove a product from the cart",
                "operationId": "f9fcd741cb74a43a36d4885bcdb1a6ba",
                "parameters": [
                    {
                        "name": "adId",
                        "in": "path",
                        "description": "The ID of the ad",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product removed from the cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ad removed from cart successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/getUserCart/{page}/{perPage}": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get User Cart",
                "description": "Retrieve the cart items for the authenticated user with pagination.",
                "operationId": "getUserCart",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 5,
                            "maximum": 50
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of cart items",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "ad_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "ad_uid": {
                                                        "type": "string",
                                                        "example": "abc123"
                                                    },
                                                    "ad_title": {
                                                        "type": "string",
                                                        "example": "Sample Ad Title"
                                                    },
                                                    "final_price": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 99.99
                                                    },
                                                    "cart_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "quantity": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "http://example.com/image.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "current_page": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "last_page": {
                                            "type": "integer",
                                            "example": 2
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": 5
                                        },
                                        "total": {
                                            "type": "integer",
                                            "example": 10
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://example.com/user/cart"
                                        },
                                        "query": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/cart/actualiseAuthCart": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update or add items to the user's cart",
                "description": "Updates the quantity of items in the user's cart. If an item is not present in the cart, it is added.",
                "operationId": "3ca6688aa3d88807d817fdbaed7d8354",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "carts"
                                ],
                                "properties": {
                                    "carts": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "ad_id",
                                                "quantity"
                                            ],
                                            "properties": {
                                                "ad_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "additionalProperties": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Actualisation done"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Ad not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/add": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Ajouter une nouvelle catégorie",
                "operationId": "b82d7c0248c8e3f8560bb206d70ddaa7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": ""
                                    },
                                    "parent_id": {
                                        "type": "integer"
                                    },
                                    "files[]": {
                                        "type": "array",
                                        "items": {
                                            "description": "Image de la catégorie (JPEG, PNG, JPG, GIF, taille max : 2048)",
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Criteria  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/detail/{uid}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Récupérer les détails d'une catégorie.",
                "operationId": "a6a3c4418148e0845860d8d947db473b",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "L'UID de la catégorie à récupérer.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès. Retourne les détails de la catégorie avec ses fichiers associés.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Non trouvé. La catégorie avec l'UID spécifié n'existe pas."
                    },
                    "500": {
                        "description": "Erreur de serveur. Une erreur s'est produite lors du traitement de la requête."
                    }
                }
            }
        },
        "/api/category/all": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Récupérer toutes les catégories.",
                "description": "Récupérer toutes les catégories.",
                "operationId": "5417b653892ac2baf32d3d12510c72a5",
                "responses": {
                    "200": {
                        "description": "Succès. Retourne toutes les catégories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur de serveur. Une erreur s'est produite lors du traitement de la requête."
                    }
                }
            }
        },
        "/api/category/all/{perpage}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Récupérer toutes les catégories.",
                "description": "Récupérer toutes les catégories.",
                "operationId": "76c7cc6af9f2c0c15115a7500766be51",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Number of element perpage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès. Retourne toutes les catégories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur de serveur. Une erreur s'est produite lors du traitement de la requête."
                    }
                }
            }
        },
        "/api/category/getAllSubSubcategory": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Get all sub-subcategories",
                "operationId": "0b1ff89facf3d8628af0994c72fc8012",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/getAllPaginateSubSubcategory/paginate": {
            "get": {
                "tags": [
                    "SubCategories"
                ],
                "summary": "Get paginated sub-subcategories",
                "operationId": "9a048a6033b61e64dd2834c9fff921b9",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/category/search": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Rechercher une catégorie par titre.",
                "operationId": "d10176cf946fad63358d7be3275e937f",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Le terme de recherche pour le titre de la catégorie.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Succès. Retourne les catégories correspondant à la recherche.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur de serveur. Une erreur s'est produite lors du traitement de la requête."
                    }
                }
            }
        },
        "/api/category/updateCategorie/{id}": {
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Update an existing category",
                "description": "Update an existing category by ID",
                "operationId": "e9c8560ad525a67343dd28ebfb326c21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "New Category Title"
                                    },
                                    "attribute_group_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Update successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Update successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/getCategoryAttribute/{uid}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Retrieve category attributes by UID",
                "description": "This endpoint retrieves the attributes of a category using the category UID.",
                "operationId": "6f388c1064e41612315da44a4b419430",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier (UID) of the category",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of category attributes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "Attribute ID",
                                                "type": "integer"
                                            },
                                            "name": {
                                                "description": "Attribute name",
                                                "type": "string"
                                            },
                                            "value": {
                                                "description": "Attribute value",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category or attribute group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Category not found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chatMessage/createChatMessage/{tradeChatId}": {
            "post": {
                "tags": [
                    "ChatMessage"
                ],
                "summary": "Create a chat message",
                "operationId": "9aa6ec376405c1105883641a206431f7",
                "parameters": [
                    {
                        "name": "tradeChatId",
                        "in": "path",
                        "description": "ID of the trade chat",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Hello, how are you?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Chat message created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Chat message created successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, content is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The content field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade chat not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chatMessage/markMessageAsRead/{chatMessageId}": {
            "post": {
                "tags": [
                    "ChatMessage"
                ],
                "summary": "Mark a message as read",
                "operationId": "07d13759bc433b2121efa31fa52d512b",
                "parameters": [
                    {
                        "name": "chatMessageId",
                        "in": "path",
                        "description": "ID of the chat message",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message marked as read successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message read successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/chatMessage/markMessageAsUnRead/{chatMessageId}": {
            "post": {
                "tags": [
                    "ChatMessage"
                ],
                "summary": "Mark a message as unread",
                "operationId": "508e3bfdae060c2468eb36a3ddd1ff91",
                "parameters": [
                    {
                        "name": "chatMessageId",
                        "in": "path",
                        "description": "ID of the chat message",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Message marked as unread successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message unread successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Message not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Message not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/merchant/getMerchant": {
            "get": {
                "tags": [
                    "Merchant"
                ],
                "summary": "Retrieve a list of merchants",
                "description": "Get all users who are marked as merchants and are not deleted.",
                "operationId": "0d34d74907aa9677438b1b1f1d167b46",
                "responses": {
                    "200": {
                        "description": "List of merchants",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/commission/store": {
            "post": {
                "tags": [
                    "Commission"
                ],
                "summary": "Store a new commission",
                "operationId": "c995b1e81eff40bf65ab292fb7bab061",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "short"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Commission de transfert"
                                    },
                                    "short": {
                                        "type": "string",
                                        "example": "TRANSF"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Commission saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commission saved successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The data provided is not valid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "short": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The short field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commission/index": {
            "get": {
                "tags": [
                    "Commission"
                ],
                "summary": "Retrieve a list of active commissions",
                "operationId": "a6eb0578d53de2db9ba11db7479480e0",
                "responses": {
                    "200": {
                        "description": "A list of active commissions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commission/show/{id}": {
            "get": {
                "tags": [
                    "Commission"
                ],
                "summary": "Retrieve a specific commission by ID",
                "operationId": "97b67ae33c9ee91f4fce5ececf7da98d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the commission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commission/update/{id}": {
            "post": {
                "tags": [
                    "Commission"
                ],
                "summary": "Update a specific commission by ID",
                "operationId": "91f078143cffb345b16ae463d0454880",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the commission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "short"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Commission Name"
                                    },
                                    "short": {
                                        "type": "string",
                                        "example": "UPDCOMM"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Commission updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commission updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commission/destroy/{id}": {
            "delete": {
                "tags": [
                    "Commission"
                ],
                "summary": "Delete a specific commission by ID",
                "operationId": "deae27988bcd96ebb69f411f8e41d801",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the commission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commission deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/commission/restore/{id}": {
            "put": {
                "tags": [
                    "Commission"
                ],
                "summary": "Restore a deleted commission by ID",
                "operationId": "30f02254079788833b5203ac813f33d9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the commission to restore",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Commission restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commission restored successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Commission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wallet/createWallet": {
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Create a wallet",
                "operationId": "createWallet",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "personId": {
                                        "type": "integer"
                                    },
                                    "commissionId": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wallet/listWallets": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "List all wallets",
                "operationId": "listWallets",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wallet/walletDetail/{commissionWalletId}": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Get wallet details by ID",
                "operationId": "walletDetail",
                "parameters": [
                    {
                        "name": "commissionWalletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Wallet not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Check if this wallet is yours",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wallet/AuthWallet": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Get authenticated user's wallets",
                "description": "Retrieve all wallets associated with the authenticated user.",
                "operationId": "d65250feec0295b42878ad7950b8b001",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wallet/AuthSTDWalletDetail": {
            "get": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Get authenticated user's STD wallets",
                "description": "Get  STD wallet associated with the authenticated user.",
                "operationId": "de107022748848d4e9fbfc7fb803f036",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/wallet/addFund": {
            "post": {
                "tags": [
                    "Wallet"
                ],
                "summary": "Add funds to a user's wallet",
                "description": "Add funds to a user's wallet",
                "operationId": "d5c912c80bad9c4311ad1b7a8978edab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "amount"
                                ],
                                "properties": {
                                    "amount": {
                                        "type": "number",
                                        "example": 100
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Funds added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully credited wallet"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/country/all": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get all country.",
                "description": "Récupérer tous les pays.",
                "operationId": "f790519fc3f6615f524e7ec869411e5c",
                "responses": {
                    "200": {
                        "description": "Success. Return all countries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Serveur error."
                    }
                }
            }
        },
        "/api/country/load": {
            "post": {
                "tags": [
                    "Country"
                ],
                "summary": "Load countries from JSON data",
                "description": "This endpoint loads country data from a JSON file and saves it to the database",
                "operationId": "60b777f0b592482d5d589fa7cd5f040a",
                "responses": {
                    "200": {
                        "description": "Countries loaded successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/country/all/{perpage}": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get all country.",
                "description": "Récupérer tous les pays.",
                "operationId": "105e2351a7ecf0cf69649e3542bf3035",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of element perpage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success. Return all countries.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Serveur error."
                    }
                }
            }
        },
        "/api/deliveryAgency/add": {
            "post": {
                "tags": [
                    "Delivery Agencies"
                ],
                "summary": "Add a new delivery agency",
                "operationId": "075ae23bb757ca49c0fd211aaa9a41d9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "agent_type": {
                                        "description": "Type of the agent",
                                        "type": "string"
                                    },
                                    "parent_id": {
                                        "description": "Parent ID of the delivery agency",
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "address": {
                                        "description": "Address of the delivery agency",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "files": {
                                        "description": "Files to upload, required if agent_type is 'company'",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "company_name": {
                                        "description": "Name of the company, required if agent_type is 'company'",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Delivery agency created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Delivery agency created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deliveryAgency/acceptOrder/{orderUid}": {
            "post": {
                "tags": [
                    "Delivery Agencies"
                ],
                "summary": "Accept an order",
                "description": "Allows a delivery person to accept an order after validating wallet balance and reserving the amount.",
                "operationId": "2d0a497f28c67aa6e58f9c549234a73b",
                "parameters": [
                    {
                        "name": "orderUid",
                        "in": "path",
                        "description": "ID of the order to accept",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order accepted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error: Only delivery people can accept orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Only delivery people can accept orders"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Wallet balance insufficient",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Wallet balance insufficient"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deliveryAgency/getAvailableOrders/{perpage}": {
            "get": {
                "tags": [
                    "Delivery Agencies"
                ],
                "summary": "Get available orders",
                "description": "Retrieve orders with 'paid' status, not present in EscrowDelivery, and matching the location_id of the authenticated delivery person.",
                "operationId": "d64adbd31e716dfc106d1ea38fb699ce",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deliveryAgency/getDeliveryAgent": {
            "get": {
                "tags": [
                    "Delivery Agencies"
                ],
                "summary": "Get all delivery agents",
                "operationId": "d4b4980e17329b23246e4532b1582784",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/deliveryAgency/rejectOrder/{orderUid}": {
            "post": {
                "tags": [
                    "Delivery Agencies"
                ],
                "summary": "Reject an order",
                "description": "Rejects an order that has been previously accepted by a delivery agent.",
                "operationId": "rejectOrder",
                "parameters": [
                    {
                        "name": "orderUid",
                        "in": "path",
                        "description": "The UID of the order to be rejected",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order rejected successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found or other errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order must be paid before to be rejected"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deliveryAgency/getAcceptedOrder/{perpage}": {
            "get": {
                "tags": [
                    "Delivery Agencies"
                ],
                "summary": "Get accepted orders",
                "description": "Retrieve a list of orders accepted by the authenticated delivery agent.",
                "operationId": "getAcceptedOrder",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Number of orders to return per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders accepted by delivery agent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": ""
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "list of orders accepted by delivery agent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deliveryzone/removeZone/{zoneUid}": {
            "post": {
                "tags": [
                    "DeliveryAgentZones"
                ],
                "summary": "Remove a zone from the delivery agent's list",
                "operationId": "93299e3baddd63284ec0e9cc2faa1374",
                "parameters": [
                    {
                        "name": "zoneUid",
                        "in": "path",
                        "description": "UID of the zone to be removed",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zone deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Zone already deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/deliveryzone/DeliveryAgentZones": {
            "get": {
                "tags": [
                    "DeliveryAgentZones"
                ],
                "summary": "Get the list of zones covered by the delivery agent",
                "operationId": "98e8eeb3dce5a5f395291de12598c017",
                "responses": {
                    "200": {
                        "description": "List of specific agent delivery zones",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "uid": {
                                                        "type": "string"
                                                    },
                                                    "city_name": {
                                                        "type": "string"
                                                    },
                                                    "latitude": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "longitude": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "country_id": {
                                                        "type": "integer"
                                                    },
                                                    "active": {
                                                        "type": "boolean"
                                                    },
                                                    "deleted": {
                                                        "type": "boolean"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/escrow/getEscrow/{perpage}": {
            "get": {
                "tags": [
                    "Escrow"
                ],
                "summary": "Get paginated list of escrows",
                "description": "Returns a paginated list of escrows",
                "operationId": "8f4e950b9a2d33eee9c1dbce73570395",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/escrow/showEscrow/{id}": {
            "get": {
                "tags": [
                    "Escrow"
                ],
                "summary": "Get details of a specific escrow",
                "description": "Returns details of a specific escrow by ID",
                "operationId": "5eb8c8f687a5842c5c6291633c06fba5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the escrow",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Escrow not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/favorite/addAdToFavorite/{adId}": {
            "post": {
                "tags": [
                    "Favorite"
                ],
                "summary": "add new ad to favorite",
                "operationId": "5f62daa907653edf4ed656061bf7a9e6",
                "parameters": [
                    {
                        "name": "adId",
                        "in": "path",
                        "description": "ID of the product to add to the favorite",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "add added successfully"
                    },
                    "400": {
                        "description": "Requête invalide"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "500": {
                        "description": "error server"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorite/GetFavoritesAd/{page}/{perPage}": {
            "get": {
                "tags": [
                    "Favorite"
                ],
                "summary": "Get user's favorite ads",
                "description": "Retrieve a paginated list of the user's favorite ads.",
                "operationId": "getFavoritesAd",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/favorite/RemoveAdFromFavoriteList/{id}": {
            "delete": {
                "tags": [
                    "Favorite"
                ],
                "summary": "Remove an ad from the favorite list",
                "operationId": "ce5497bb2e0f331be2e729a1c4525ff9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the ad to remove from the favorite list",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ad removed from favorite successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "ad remove from favorite successfully !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized to remove the ad",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You can't remove an ad from another favorite list"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/file/getFilesByFileCode/{file}/{returnSingleFile}": {
            "get": {
                "tags": [
                    "File"
                ],
                "summary": "Get files by file code",
                "operationId": "e5ce6d099b54d9b92c65c1223cf8b2a7",
                "parameters": [
                    {
                        "name": "filecode",
                        "in": "path",
                        "description": "File code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "returnSingleFile",
                        "in": "query",
                        "description": "Return single file (0 or 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Files retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notification/create": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Create a notification",
                "description": "Creates a notification for multiple persons",
                "operationId": "e04449501d370d7e1f0e98ae929a768f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "object": {
                                        "type": "string",
                                        "example": "notification object"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "notification description"
                                    },
                                    "personIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Notification sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "notification sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 400
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The data provided is not valid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/notifications/{notificationUid}": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read or unread",
                "operationId": "855d10d3d57d00a8106148ccd51a84c6",
                "parameters": [
                    {
                        "name": "notificationUid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notification/createGeneralNotification": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Create general notification",
                "operationId": "e0523f675e70634ac0dd573bdcc4b6be",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "properties": {
                                    "object": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "General notification created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/notification/getNotifications/{perpage}": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get notifications for a user",
                "operationId": "22ceef8c76cb983f2cf9c73be1f91f3c",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "object": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "isRead": {
                                                        "type": "boolean"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/notification/deleteNotification/{notificationUid}": {
            "post": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete a notification",
                "operationId": "307db8f3f16e5d9800ad2a0d7fa9413c",
                "parameters": [
                    {
                        "name": "notificationUid",
                        "in": "path",
                        "description": "Unique identifier of the notification",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Notification not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ongingtradeStage/makeCompleteTradeStage/{ongingtradeStageId}": {
            "post": {
                "tags": [
                    "OnGoingTradeStage"
                ],
                "summary": "Mark a trade stage as complete",
                "operationId": "98d68334fa0f15778f4a0f32b0705e32",
                "parameters": [
                    {
                        "name": "ongingtradeStageId",
                        "in": "path",
                        "description": "Ongoing trade stage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade stage marked as complete successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage complete successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade stage already complete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage already complete"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ongingtradeStage/makeInCompleteTradeStage/{ongingtradeStageId}": {
            "post": {
                "tags": [
                    "OnGoingTradeStage"
                ],
                "summary": "Mark a trade stage as incomplete",
                "operationId": "47a7b2cf546056fb318b72e990942bf2",
                "parameters": [
                    {
                        "name": "ongingtradeStageId",
                        "in": "path",
                        "description": "Ongoing trade stage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade stage marked as incomplete successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage marked as incomplete successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade stage already incomplete",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage already incomplete"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ongingtradeStage/showTradeStage/{ongingtradeStageId}": {
            "get": {
                "tags": [
                    "OnGoingTradeStage"
                ],
                "summary": "Retrieve details of a trade stage",
                "operationId": "6643d18028b90d70125b30b311dee815",
                "parameters": [
                    {
                        "name": "ongingtradeStageId",
                        "in": "path",
                        "description": "Ongoing trade stage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the trade stage",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade stage not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ongingtradeStage/handleTradeStageAction/{ongingtradeStageId}/{actionType}": {
            "post": {
                "tags": [
                    "OnGoingTradeStage"
                ],
                "summary": "Handle trade stage action",
                "description": "Handle trade stage action",
                "operationId": "handleTradeStageAction",
                "parameters": [
                    {
                        "name": "ongingtradeStageId",
                        "in": "path",
                        "description": "Onging trade stage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "actionType",
                        "in": "path",
                        "description": "Action type",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ongingtradeStage/updateOngingTradeStage/{tradeStageId}": {
            "post": {
                "tags": [
                    "OnGoingTradeStage"
                ],
                "summary": "Update an ongoing trade stage",
                "operationId": "a939573ef67d7c8eb570e9f19d919fc5",
                "parameters": [
                    {
                        "name": "tradeStageId",
                        "in": "path",
                        "description": "ID of the ongoing trade stage to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stage_title": {
                                        "type": "string",
                                        "example": "Updated Stage Title"
                                    },
                                    "steporder": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "yes_action": {
                                        "type": "string",
                                        "example": "MOVE_TO_NEXT_STEP"
                                    },
                                    "no_action": {
                                        "type": "string",
                                        "example": "END_TRADE"
                                    },
                                    "previous_step_id": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "next_step_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trade stage updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade stage not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/CreateAnOrder": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create an order",
                "description": "Create an order for the authenticated user",
                "operationId": "006a66136ece729caaa3a74f098e0328",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {}
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string",
                                            "example": "Order created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Cart is empty",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Cart is empty"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/viewOrder/{orderId}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "View Order Details",
                "description": "Retrieve the details of a specific order by its ID.",
                "operationId": "viewOrder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "uid": {
                                                    "type": "string",
                                                    "example": "order_12345"
                                                },
                                                "order_details_deleted": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "order_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "product_id": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "quantity": {
                                                                "type": "integer",
                                                                "example": 2
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 75
                                                            },
                                                            "final_price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 150
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/listOrders/{perpage}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get a list of orders",
                "description": "Get a list of orders for the authenticated user",
                "operationId": "3c2ec3da495ab3c499801c90e6c2296f",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/deleteOrderDetail/{orderDetailId}": {
            "post": {
                "tags": [
                    "Order Detail"
                ],
                "summary": "Delete an order detail",
                "description": "Delete a specific order detail by ID",
                "operationId": "deleteOrderDetail",
                "parameters": [
                    {
                        "name": "orderDetailId",
                        "in": "path",
                        "description": "ID of the order detail to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order detail deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order detail deleted from Order successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order detail not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This order detail not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/updateOrderDetail/{orderDetailId}": {
            "post": {
                "tags": [
                    "Order Detail"
                ],
                "summary": "Update an order detail",
                "description": "Update a specific order detail by ID",
                "operationId": "updateOrderDetail",
                "parameters": [
                    {
                        "name": "orderDetailId",
                        "in": "path",
                        "description": "ID of the order detail to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "quantity": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order detail updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order detail updated from Order successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order detail not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This order detail not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/orderManyItem": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create an order from multiple cart items",
                "operationId": "07a393de9c8da29bcf151b25d7ace5d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "cartItemids"
                                ],
                                "properties": {
                                    "cartItemids": {
                                        "description": "IDs of the cart items to order",
                                        "type": "array",
                                        "items": {
                                            "description": "Array of cart item IDs",
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Cart is empty"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/payOrder/{orderId}": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Pay for an order",
                "operationId": "c8a9141cfec192096ab4ca1d97c75613",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order to be paid",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "longitude": {
                                        "description": "Longitude of the user's location",
                                        "type": "number"
                                    },
                                    "latitude": {
                                        "description": "Latitude of the user's location",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment done successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment done Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/orderTrade/{orderId}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get order transactions",
                "description": "Get the transactions for an order by its ID",
                "operationId": "2bacb5cc212d4ed375f65fe7c791ac93",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/orderValidatedTrade/{orderId}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get order transactions",
                "description": "Get the transactions for an order by its ID",
                "operationId": "47090c71daba134c51183ef1b0f2691e",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/getAllFinalizedOrders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all finalized orders",
                "description": "Retrieve all orders that have OrderDetails with Trades having the status 'endtrade' or 'canceltrade'.",
                "operationId": "c9056c517afafea3df16736f0c58e3e7",
                "responses": {
                    "200": {
                        "description": "List of finalized orders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 10
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade statuses not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Trade statuses not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/userOrders/{perpage}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders of the authenticated user",
                "description": "Returns a list of all orders placed by the authenticated user",
                "operationId": "fc5f24ea4ee75cf432c410726f7c4523",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of elements per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/getMerchantOrder": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get all orders of the merchant",
                "description": "Returns a list of all orders placed by the merchant",
                "operationId": "d890bfb5fcee8a3d18a7e8bc02620e1b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/CreateAndPayOrder": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create and pay for an order",
                "operationId": "fdadab5bc3637cf797f3a7e0be576c39",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "longitude": {
                                        "description": "Longitude of the user's location",
                                        "type": "number"
                                    },
                                    "latitude": {
                                        "description": "Latitude of the user's location",
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order created and payment done successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payment done Successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/getOrderAds/{orderUid}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Récupère les produits d'une commande",
                "description": "Cette route permet de récupérer la liste des produits associées à une commande spécifique.",
                "operationId": "24a95bcb0454dbc12ae1891752773c00",
                "parameters": [
                    {
                        "name": "orderUid",
                        "in": "path",
                        "description": "UID de la commande",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des produits dans la commande",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commande non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/order/getMerchantOrderAds/{orderUid}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Récupère les produits d'une commande d'un marchand",
                "description": "Cette route permet de récupérer la liste des produits d'un marchand associées à une commande spécifique.",
                "operationId": "e0848ca25f9a8c9a3f0a460bce479da1",
                "parameters": [
                    {
                        "name": "orderUid",
                        "in": "path",
                        "description": "UID de la commande",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des produits dans la commande",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commande non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/resendForgottenOtp/{uid}": {
            "post": {
                "tags": [
                    "Password Recovery"
                ],
                "summary": "Resend OTP for password recovery",
                "description": "Generate a new OTP and send it to the user's uid for password recovery.",
                "operationId": "afa0e1981169fbb6151336b53a089b7f",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Uid of the user",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "dhshfjsg-sgsg-sgg-s"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "We would like to inform you that a message containing 6 digits has been sent to you by e-mail. Please enter the code to change your password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/permission/index": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get all permissions",
                "operationId": "2306a1f461cca99b72b7b4de8fa9ac21",
                "responses": {
                    "200": {
                        "description": "List of permissions"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permission/store": {
            "post": {
                "tags": [
                    "Permission"
                ],
                "summary": "Create a new permission ",
                "operationId": "aaa9a1489978d8237d358f1010932130",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "create"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permission  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permission/show/{id}": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get a specific permission by ID",
                "operationId": "1cae0ef6ddb328b988765a8129134b9d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the permission",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission details"
                    },
                    "404": {
                        "description": "Permission not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/permission/indexbycategorie": {
            "get": {
                "tags": [
                    "Permission"
                ],
                "summary": "Get all permissions groupe by categorie",
                "operationId": "d6606b4331cf95c60b312c1d0977f8fa",
                "responses": {
                    "200": {
                        "description": "List of permissions groupe by category"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/person/updatePersonInformation": {
            "post": {
                "tags": [
                    "Persons"
                ],
                "summary": "Update person information",
                "description": "Updates the information of a person identified by the provided UID.",
                "operationId": "7aa8910458af4745fb6af295d367cb49",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "sex": {
                                        "description": "make 1 if you are a male",
                                        "type": "boolean",
                                        "example": "1"
                                    },
                                    "dateofbirth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-01-01"
                                    },
                                    "country_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "phonenumber": {
                                        "type": "string",
                                        "example": "1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Information updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Person not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/person/AddOrUpdateProfileImg": {
            "post": {
                "tags": [
                    "Persons"
                ],
                "summary": "Add or update profile image",
                "description": "Uploads a new profile image for the authenticated person, replacing any existing image.",
                "operationId": "1653d412862d77c83875b48d26a02f90",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "files": {
                                        "description": "The file(s) to upload",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Picture added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Picture added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Person not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Person not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder/createPreorder": {
            "post": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Create a new preorder",
                "operationId": "ad16aeba9d04ad37128c47503a204b77",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "location_id",
                                    "category_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "minimumbudget": {
                                        "type": "string",
                                        "pattern": "^\\d{1,2}\\.\\d{6,}$"
                                    },
                                    "maximumbudget": {
                                        "type": "string",
                                        "pattern": "^\\d{1,2}\\.\\d{6,}$"
                                    },
                                    "address": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "integer"
                                    },
                                    "category_id": {
                                        "type": "integer"
                                    },
                                    "files[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder_answer/createPreorderAnswer/{preorderId}": {
            "post": {
                "tags": [
                    "PreorderAnswers"
                ],
                "summary": "Create a new preorder answer",
                "operationId": "40f7bd56e0e0d3f7f20950134ebb2718",
                "parameters": [
                    {
                        "name": "preorderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "type": "string"
                                    },
                                    "files[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    },
                                    "price": {
                                        "type": "string",
                                        "pattern": "^\\d{1,2}\\.\\d{6,}$"
                                    },
                                    "delivery_time": {
                                        "type": "integer"
                                    },
                                    "parent_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preorder answer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preorder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder/getPreorderPending": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Get all pending preorders",
                "description": "Retrieves all preorders what been pending.",
                "operationId": "043e9d17b0f853cfd19adf961b3b005b",
                "responses": {
                    "200": {
                        "description": "A list of pending preorders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "uid": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "0bac4ef8-182a-11ef-9357-00ff5210c7f1"
                                            },
                                            "statut": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "content": {
                                                "type": "string",
                                                "example": "Sample preorder content"
                                            },
                                            "filecode": {
                                                "type": "string",
                                                "example": "2VYfU4F"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder/validatePreorder/{uid}": {
            "post": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Validate a preorder",
                "description": "Validates a preorder by changing its status to 'validated' if its current status is 'pending'.",
                "operationId": "47f16cbf3d13f4e985f599ad0dae8dad",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier of the preorder",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preorder validated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preorder validated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preorder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preorder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Statut of preorder must be pending. Please, check it !",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Statut of preorder must be pending. Please, check it !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder/rejectPreorder/{uid}": {
            "post": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Reject a preorder",
                "description": "Rejects a preorder and updates its status to 'rejected'.",
                "operationId": "fcc910b131f38f1d54b5c330307b2457",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "The UID of the preorder",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reject_reason"
                                ],
                                "properties": {
                                    "reject_reason": {
                                        "description": "Reason for rejecting the preorder",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preorder rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preorder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Statut of preorder must be pending. Please, check it !",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder_answer/getPreorderAnswerValidated/{perpage}": {
            "get": {
                "tags": [
                    "PreorderAnswers"
                ],
                "summary": "Get all validated preorders answer",
                "description": "Retrieves all preorders answer that have been validated.",
                "operationId": "b4513efe9a885f572f9db9e2ee7643c0",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of item per page",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of validated preorders answer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "uid": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "0bac4ef8-182a-11ef-9357-00ff5210c7f1"
                                            },
                                            "statut": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "content": {
                                                "type": "string",
                                                "example": "Sample preorder content"
                                            },
                                            "filecode": {
                                                "type": "string",
                                                "example": "2VYfU4F"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder_answer/getPreorderAnswerRejected": {
            "get": {
                "tags": [
                    "PreorderAnswers"
                ],
                "summary": "Get all rejected preorders answer",
                "description": "Retrieves all preorders answer that have been rejected.",
                "operationId": "8aa6fe77545c065da04068e394802606",
                "responses": {
                    "200": {
                        "description": "A list of rejected preorders answer",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "uid": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "0bac4ef8-182a-11ef-9357-00ff5210c7f1"
                                            },
                                            "statut": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "content": {
                                                "type": "string",
                                                "example": "Sample preorder content"
                                            },
                                            "filecode": {
                                                "type": "string",
                                                "example": "2VYfU4F"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder_answer/getPreorderAnswerPending": {
            "get": {
                "tags": [
                    "PreorderAnswers"
                ],
                "summary": "Get all pending preorders answer",
                "description": "Retrieves all preorders answers what been pending.",
                "operationId": "3139bea39166e44d84a9b3d1cf2a04ee",
                "responses": {
                    "200": {
                        "description": "A list of pending preorders answers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "uid": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "0bac4ef8-182a-11ef-9357-00ff5210c7f1"
                                            },
                                            "statut": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "content": {
                                                "type": "string",
                                                "example": "Sample preorder content"
                                            },
                                            "filecode": {
                                                "type": "string",
                                                "example": "2VYfU4F"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder/getPreorderWitnAnswer": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Get all validated preorders with their answers ",
                "description": "Retrieves all preorders with their answers.",
                "operationId": "b9bf27236e7ec32b7b265dcd987c9b2e",
                "responses": {
                    "200": {
                        "description": "A list of  validated preorders with their answers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder/getPreorderWithValidatedAnswers/{uid}/{perpage}": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Récupérer les informations d'une précommande avec les réponses validées",
                "operationId": "eb3fe03698ea46532b4e78e6fd3e802b",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Identifiant unique de la précommande",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "nombre d'éléments par page",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Récupération réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Précommande non trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "Précommande non trouvée !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Une erreur s'est produite"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder_answer/getSpecificPreorderAnswer/{uid}": {
            "get": {
                "tags": [
                    "PreorderAnswers"
                ],
                "summary": "Récupère une réponse pré-commande spécifique",
                "description": "Cette opération récupère une réponse pré-commande spécifique en fonction de l'UID fourni.",
                "operationId": "576f7d993e6d921f1cef0138c8eb25de",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "L'UID de la réponse pré-commande",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "La réponse pré-commande a été trouvée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "La réponse pré-commande n'a pas été trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Une erreur s'est produite lors de la recherche de la réponse pré-commande",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder/getPreorderValidated/{perpage}": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Get all validated preorders",
                "description": "Retrieves all preorders that have been validated.",
                "operationId": "ea4f1929e49ececc5a6b006763a40313",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "nombre d'élément par page",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of validated preorders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "uid": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "0bac4ef8-182a-11ef-9357-00ff5210c7f1"
                                            },
                                            "statut": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "content": {
                                                "type": "string",
                                                "example": "Sample preorder content"
                                            },
                                            "filecode": {
                                                "type": "string",
                                                "example": "2VYfU4F"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder/getPreorderRejected": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Get all rejected preorders",
                "description": "Retrieves all preorders that have been rejected.",
                "operationId": "d04a1dcf672d1db6da487c7be40ef602",
                "responses": {
                    "200": {
                        "description": "A list of rejected preorders",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "uid": {
                                                "type": "string",
                                                "format": "uuid",
                                                "example": "0bac4ef8-182a-11ef-9357-00ff5210c7f1"
                                            },
                                            "statut": {
                                                "type": "integer",
                                                "example": 2
                                            },
                                            "content": {
                                                "type": "string",
                                                "example": "Sample preorder content"
                                            },
                                            "filecode": {
                                                "type": "string",
                                                "example": "2VYfU4F"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-05-22 10:57:13"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/preorder_answer/validatePreorderAnswer/{uid}": {
            "post": {
                "tags": [
                    "PreorderAnswers"
                ],
                "summary": "Validate a preorder answer",
                "description": "Validates a preorder answer by changing its status to 'validated' if its current status is 'pending'.",
                "operationId": "1839e352202c7adc07b44737ec72fce4",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier of the preorder",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preorder validated successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preorder validated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preorder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Preorder not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Statut of preorder must be pending. Please, check it !",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Statut of preorder must be pending. Please, check it !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder_answer/rejectPreorderAnswer/{uid}": {
            "post": {
                "tags": [
                    "PreorderAnswers"
                ],
                "summary": "Reject a preorder answer",
                "description": "Rejects a preorder answer and updates its status to 'rejected'.",
                "operationId": "f42b886a5966a25ecb1379a95994355d",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "The UID of the preorder answer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "reject_reason"
                                ],
                                "properties": {
                                    "reject_reason": {
                                        "description": "Reason for rejecting the preorder",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preorder rejected successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preorder not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Statut of preorder must be pending. Please, check it !",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder/getAuthPreorderValidated/{perpage}": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Retrieve the validated preorder for the authenticated user",
                "description": "This endpoint retrieves the validated preorder for the authenticated user. It returns a JSON response containing the preorder data.",
                "operationId": "3a4f09dd8dfa80a558173b63bc43236a",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of elements perpage",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/write/{PreordersAnswerUid}": {
            "post": {
                "tags": [
                    "Review"
                ],
                "summary": "Chat with a seller regarding a pre-order response",
                "operationId": "08b4f107b9d0e5dcbc5bce6885ee671a",
                "parameters": [
                    {
                        "name": "PreordersAnswerUid",
                        "in": "path",
                        "description": "Uid of preorder response",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "description": "Contenu de la réponse",
                                        "type": "string"
                                    },
                                    "files[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder/merchantAffectedByPreorder/{perPage}": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Get pre-orders that concern the merchant",
                "operationId": "e690a79e307b34857d8af62fb8b298f1",
                "parameters": [
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "number of elements perpage",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        },
                                        "nombre": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder/getValidatedPreordersWithAnswers/{preorderUid}/{perPage}": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Get pre-orders validated with responses",
                "operationId": "b8eb4ac4ccd4bf12f7b981cb9b97a94f",
                "parameters": [
                    {
                        "name": "preorderUid",
                        "in": "path",
                        "description": "Uid of preorder response",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "ID of the merchant or related entity",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "preorder_answers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder/getPreordersAnswerSortedByDeliveryTime/{preorderUid}/{perPage}": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Get pre-orders validated with responses filtered by delivery time",
                "operationId": "9fcd0b772ab83fbf4bfb0949530047db",
                "parameters": [
                    {
                        "name": "preorderUid",
                        "in": "path",
                        "description": "Uid of preorder response",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "ID of the merchant or related entity",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "preorder_answers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/preorder/getPreordersAnswerSortedByPrice/{preorderUid}/{perPage}": {
            "get": {
                "tags": [
                    "Preorder"
                ],
                "summary": "Get pre-orders validated with responses filtered by price",
                "operationId": "e2ffca377cb492f0ff057cac8c7f15e4",
                "parameters": [
                    {
                        "name": "preorderUid",
                        "in": "path",
                        "description": "UID of the preorder",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "path",
                        "description": "Number of results per page",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "preorder_answers": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/answerReviews/{preorderAnswerUid}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "summary": "Get reviews for a specific preorder answer",
                "operationId": "a3ee816de67806c72ffa54918e29b1f8",
                "parameters": [
                    {
                        "name": "preorderAnswerUid",
                        "in": "path",
                        "description": "Uid of preorder answer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/answerReviewsPaginate/{preorderAnswerUid}/{perpage}": {
            "get": {
                "tags": [
                    "Review"
                ],
                "summary": "Get reviews for a specific preorder answer",
                "operationId": "633841015ce70e216a9c32e068755381",
                "parameters": [
                    {
                        "name": "preorderAnswerUid",
                        "in": "path",
                        "description": "Uid of preorder answer",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of element perpage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/role/index": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get all roles",
                "operationId": "b3d674de4d1bfdce32734bddc8628891",
                "responses": {
                    "200": {
                        "description": "List of roles"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/role/store": {
            "post": {
                "tags": [
                    "Role"
                ],
                "summary": "Create a new role ",
                "operationId": "217d536f741ea073dee6d97e5bb36df9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "traveler"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Role  created successfully"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/role/show/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Get a specific role by ID",
                "operationId": "a40324f1b443d45a408830e2695bbeb9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role details"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/role/destroy/{id}": {
            "delete": {
                "tags": [
                    "Role"
                ],
                "summary": "Delete a role by ID",
                "operationId": "fa71958128495cee0ebb0097bad4087f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the role",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deleted successfully"
                    },
                    "404": {
                        "description": "Role not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/ad/uploadAdImage/{ad_uid}": {
            "post": {
                "tags": [
                    "Ad"
                ],
                "summary": "Upload an image for an ad",
                "operationId": "609326c9dd351d96a2afbfdc04bb3870",
                "parameters": [
                    {
                        "name": "ad_uid",
                        "in": "path",
                        "description": "Unique identifier for the ad",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "files"
                                ],
                                "properties": {
                                    "files[]": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Image added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Image added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Ad not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Ad not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/file/removeFile/{uid}": {
            "delete": {
                "tags": [
                    "File"
                ],
                "summary": "Remove a file",
                "operationId": "5ddbc928abf5293a7db16ca8466b1520",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier for the file",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "File not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "File not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/shop/becomeMerchant": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "summary": "Convert client to merchant",
                "description": "This endpoint allows a client to become a merchant.",
                "operationId": "dd3658025a6e486627935b4a25de2be1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "files[]"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the shop",
                                        "type": "string",
                                        "example": "My Shop"
                                    },
                                    "description": {
                                        "description": "Description of the shop",
                                        "type": "string",
                                        "maxLength": 500,
                                        "example": "This is my shop description"
                                    },
                                    "files[]": {
                                        "description": "Array of images",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shop created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Shop created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Client is already a merchant",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You already are a merchant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The data provided is not valid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/createShop": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "summary": "Create a new shop for a client",
                "description": "This endpoint allows you to create a new shop for a specific client. The shop must have a unique title and a description. Optional files can be uploaded and linked to the shop.",
                "operationId": "5067dbf8829e0a4a442ba495b97fbff7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the shop, must be unique.",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the shop, maximum 500 characters.",
                                        "type": "string"
                                    },
                                    "allo[]": {
                                        "description": "Optional files to upload for the shop.",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Shop created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Shop created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The data provided is not valid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/updateShop/{uid}": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "summary": "Update shop details",
                "operationId": "f523142f2a1e4e55da006422c5b0a090",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "UID of the shop to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Shop details to update",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "description": "Title of the shop",
                                        "type": "string",
                                        "example": "New Shop Name"
                                    },
                                    "description": {
                                        "description": "Description of the shop",
                                        "type": "string",
                                        "example": "This is a new shop description."
                                    },
                                    "image": {
                                        "description": "Optional files to upload",
                                        "type": "file",
                                        "example": "file.txt"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Shop updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid data provided",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The data provided is not valid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "title": [
                                                    "The title field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/showShop/{uid}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Show shop details",
                "description": "This endpoint returns the details of a shop by its UID.",
                "operationId": "85b151e155b126f576ab365e2b79339b",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "UID of the shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shop not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Shop not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/addShopFile/{filecodeShop}": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "summary": "Add a file to the shop",
                "description": "This endpoint allows you to add a file to a shop using the shop's file code.",
                "operationId": "7032fa5b2c79c1e05745c03d4acd72e4",
                "parameters": [
                    {
                        "name": "filecodeShop",
                        "in": "path",
                        "description": "File code of the shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "files[]": {
                                        "description": "Files to be uploaded",
                                        "type": "array",
                                        "items": {
                                            "type": "file"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "file add successfuly"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/updateShopFile/{uid}": {
            "put": {
                "tags": [
                    "Shop"
                ],
                "summary": "Update shop file",
                "operationId": "124897b3e0f3f33d3eceac362171ae93",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "Unique identifier of the shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "files": {
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "binary"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "File updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "file update successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/addCategoryToSHop/{shopId}": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "summary": "Add category to shop",
                "operationId": "21bf64333803aa0b114df2b1844b40bc",
                "parameters": [
                    {
                        "name": "shopId",
                        "in": "path",
                        "description": "Unique identifier of the shop",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "categoryIds": {
                                        "description": "Array of category IDs to add to the shop",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category added successfully or other message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category added successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Category added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or other client error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/RemoveCategoryToSHop/{shopId}": {
            "post": {
                "tags": [
                    "Shop"
                ],
                "summary": "Remove category to shop",
                "operationId": "a08e8ffbddd54adfcc7b53df4eee69e5",
                "parameters": [
                    {
                        "name": "shopId",
                        "in": "path",
                        "description": "Unique identifier of the shop",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "categoryIds": {
                                        "description": "Array of category IDs to Remove to the shop",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category Removed successfully or other message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category Removed successfully"
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": "Category Removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or other client error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/AdMerchant/{shopId}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Get ads by merchant",
                "description": "Retrieve a paginated list of ads for a specific shop by the authenticated merchant.",
                "operationId": "5c2f1b73ada73aa0305e3bc7d00b68ed",
                "parameters": [
                    {
                        "name": "shopId",
                        "in": "path",
                        "description": "ID of the shop",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shop not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Shop not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/userShop": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Get user's shop",
                "description": "Retrieve the shop for the authenticated user",
                "operationId": "getUserShop",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving the shop details."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/userPaginateShop/{perpage}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Get user's shop",
                "description": "Retrieve the shop details for the authenticated user",
                "operationId": "6c9d1d48ed952eec9dbbf6c822be8bc9",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of element perpage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while retrieving the shop details."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/categories/{shopId}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Get categories of a shop",
                "description": "Retrieve all categories associated with a specific shop.",
                "operationId": "65f15b74c91a3dd49498384cbcc22a31",
                "parameters": [
                    {
                        "name": "shopId",
                        "in": "path",
                        "description": "ID of the shop",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/getOrdersShop/{shopUid}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Retrieve orders grouped by status for a specific shop",
                "description": "This endpoint retrieves orders grouped by status for a given shop, identified by its unique shopUid.",
                "operationId": "37a8f9a401a4f232ad7bcb256d72a507",
                "parameters": [
                    {
                        "name": "shopUid",
                        "in": "path",
                        "description": "Unique identifier of the shop",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Number of results per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders grouped by status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "status": {
                                                        "type": "string",
                                                        "example": "pending"
                                                    },
                                                    "orders": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 123
                                                                },
                                                                "order_details": {
                                                                    "properties": {
                                                                        "ad": {
                                                                            "properties": {
                                                                                "shop_id": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Shop not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Shop not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/getShopOrderAds/{orderUid}/{shopUid}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Récupère les annonces d'une commande dans un magasin",
                "description": "Cette route permet de récupérer les annonces associées à une commande spécifique dans un magasin.",
                "operationId": "64cce8ae11dc0369bb5852bbdac325bd",
                "parameters": [
                    {
                        "name": "orderUid",
                        "in": "path",
                        "description": "UID de la commande",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "shopUid",
                        "in": "path",
                        "description": "UID du magasin",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Liste des annonces trouvées dans la commande",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ads": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        },
                                        "number": {
                                            "description": "Nombre d'annonces trouvées",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Commande ou magasin non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/getMerchantStatistic": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Statistiques d'un marchand",
                "description": "Cette route fournit des statistiques globales pour un marchand, y compris les commandes, les clients, et les gains.",
                "operationId": "8f14f6e55efa2c6aa359cf5adcd4aac5",
                "responses": {
                    "200": {
                        "description": "Statistiques du marchand",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_orders": {
                                            "description": "Nombre total de commandes",
                                            "type": "integer"
                                        },
                                        "total_customers": {
                                            "description": "Nombre total de clients",
                                            "type": "integer"
                                        },
                                        "total_earning": {
                                            "description": "Revenus totaux du marchand",
                                            "type": "number",
                                            "format": "float"
                                        },
                                        "merchant_earning_per_order": {
                                            "description": "Gains du marchand par commande",
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/getCategorySalePercentage/{shopUid}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Récupère le pourcentage de vente par catégorie pour une boutique donnée",
                "operationId": "7f4ad023a61c4550c6e4f68a48313876",
                "parameters": [
                    {
                        "name": "shopUid",
                        "in": "path",
                        "description": "L'UID de la boutique",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pourcentage de vente par catégorie récupéré avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "category": {
                                                        "type": "string",
                                                        "example": "Catégorie 1"
                                                    },
                                                    "sales_count": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "sales_percentage": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 25.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category sales percentage calculated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Boutique non trouvée ou aucune commande validée trouvée",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Shop not found or no validated orders found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/shop/getMonthlyProductSales/{shopUid}/{year}": {
            "get": {
                "tags": [
                    "Shop"
                ],
                "summary": "Récupère les ventes mensuelles de produits pour une boutique spécifique.",
                "description": "Cette route permet de récupérer le nombre de produits vendus par mois pour une boutique donnée en fonction de son UID et de l'année spécifiée.",
                "operationId": "getMonthlyProductSales",
                "parameters": [
                    {
                        "name": "shopUid",
                        "in": "path",
                        "description": "L'UID unique de la boutique.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "example": "d6b2b94b-e72f-4d0e-a377-1338c8a1f4f2"
                        }
                    },
                    {
                        "name": "year",
                        "in": "path",
                        "description": "L'année pour laquelle les ventes doivent être récupérées.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2024
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ventes mensuelles récupérées avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "month": {
                                                        "description": "Le nom du mois",
                                                        "type": "string",
                                                        "example": "Janvier"
                                                    },
                                                    "sales_count": {
                                                        "description": "Le nombre de produits vendus pour ce mois",
                                                        "type": "integer",
                                                        "example": 15
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Monthly product sales calculated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Boutique ou commandes non trouvées",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Shop not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeChat/createTradeChat/{tradeId}": {
            "post": {
                "tags": [
                    "TradeChat"
                ],
                "summary": "Create Trade Chat",
                "description": "Créer un nouveau Trade Chat",
                "operationId": "6ebc95d0e37422dbdbfb315d567aea9f",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "ID of the Trade",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade chat created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat created successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeChat/updateTradeChatLastMessage/{tradeChatId}": {
            "post": {
                "tags": [
                    "TradeChat"
                ],
                "summary": "Update the last message of a trade chat",
                "operationId": "59a37df7100e907274e2f19ebfadc092",
                "parameters": [
                    {
                        "name": "tradeChatId",
                        "in": "path",
                        "description": "ID of the trade chat",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "message": {
                                        "type": "string",
                                        "example": "Updated last message content"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trade chat last message updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat last message updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade chat not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeChat/markTradeChatAsSpam/{tradeChatId}": {
            "post": {
                "tags": [
                    "TradeChat"
                ],
                "summary": "Mark a trade chat as spam",
                "operationId": "c5334b208e764b40d3a92bcf4b2ce37c",
                "parameters": [
                    {
                        "name": "tradeChatId",
                        "in": "path",
                        "description": "ID of the trade chat",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade chat marked as spam successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat marked as spam successfully !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade chat not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeStage/archiveTradeChat/{tradeChatId}": {
            "post": {
                "tags": [
                    "TradeChat"
                ],
                "summary": "Archive a trade chat",
                "operationId": "aeaad299b645e293d78b45d058d4c87d",
                "parameters": [
                    {
                        "name": "tradeChatId",
                        "in": "path",
                        "description": "ID of the trade chat",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade chat archived successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat marked archived successfully !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade chat not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeChat/getMessageOfTradeChat/{tradeChatId}": {
            "get": {
                "tags": [
                    "TradeChat"
                ],
                "summary": "Get messages of a trade chat",
                "operationId": "ce4d176897174878ab68f3f153f4ac9a",
                "parameters": [
                    {
                        "name": "tradeChatId",
                        "in": "path",
                        "description": "ID of the trade chat",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Messages retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade chat not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade chat not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/createTrade": {
            "post": {
                "tags": [
                    "Trade"
                ],
                "summary": "Create a new trade",
                "operationId": "044a7eae0695780f849247b3dd178192",
                "parameters": [
                    {
                        "name": "orderDetailId",
                        "in": "query",
                        "description": "Order detail ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "buyerId",
                        "in": "query",
                        "description": "Buyer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sellerId",
                        "in": "query",
                        "description": "Seller ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "enddate",
                        "in": "query",
                        "description": "End date of the trade",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Trade amount",
                        "required": true,
                        "schema": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/updateTradeStatusCanceled{tradeId}": {
            "post": {
                "tags": [
                    "Trade"
                ],
                "summary": "Update trade status to canceled",
                "operationId": "483d9aa73e4d039c10e5de31c5965f2e",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "Trade ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/updateTradeStatusDisputed/{tradeId}": {
            "post": {
                "tags": [
                    "Trade"
                ],
                "summary": "Update trade status to disputed",
                "operationId": "025eee1872953e7d089de1a623742c06",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "Trade ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/displayTrades": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Display all trades for the authenticated user",
                "operationId": "fbf5600af7a3b9df25222028987b9270",
                "responses": {
                    "200": {
                        "description": "Trades retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/displayTradesWithoutEndDate": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Display trades without end date",
                "operationId": "2861ee4c0c848dabe1441d9fd2d91005",
                "responses": {
                    "200": {
                        "description": "List of trades without end date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/updateEndDate/{tradeId}": {
            "post": {
                "tags": [
                    "Trade"
                ],
                "summary": "Update end date of a trade",
                "operationId": "4638763700f66f93862575c412587d3f",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "Trade ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "enddate": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2024-06-24 10:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "End date updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "End date updated successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The end date field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/getTradeStage/{tradeId}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get stages of a trade",
                "operationId": "111937632cc92ae226d937cfde049455",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "Trade ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of trade stages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "trade_id": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "stage": {
                                                "type": "string",
                                                "example": "Stage name"
                                            },
                                            "buyer": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "seller": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-24 10:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-24 10:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/getTradeStageDone/{tradeId}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get completed stages of a trade",
                "operationId": "6797375e55d912d46112caee4f376f13",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "Trade ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of completed trade stages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "trade_id": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "stage": {
                                                "type": "string",
                                                "example": "Stage name"
                                            },
                                            "complete": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-24 10:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-24 10:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/getTradeStageNotDoneYet/{tradeId}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get stages not completed yet of a trade",
                "operationId": "0a6f1d0e084b78575b3e3c68fb9aa114",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "Trade ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of not completed trade stages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "trade_id": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "stage": {
                                                "type": "string",
                                                "example": "Stage name"
                                            },
                                            "complete": {
                                                "type": "boolean",
                                                "example": false
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-24 10:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-24 10:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/getTradeChat/{tradeId}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get chat messages of a trade",
                "operationId": "313c2a45d5252964cb0c04c24b933e95",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "Trade ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of chat messages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "trade_id": {
                                                "type": "integer",
                                                "example": 123
                                            },
                                            "message": {
                                                "type": "string",
                                                "example": "Hello"
                                            },
                                            "sender_id": {
                                                "type": "integer",
                                                "example": 456
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-24 10:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2024-06-24 10:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/getAuthTradeStage/{tradeId}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get authenticated user's trade stage details",
                "operationId": "6177fb65d5f21a7bc602db326c3adc6b",
                "parameters": [
                    {
                        "name": "tradeId",
                        "in": "path",
                        "description": "Trade ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade stage details for the authenticated user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "trade_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "stage": {
                                                    "type": "string",
                                                    "example": "Stage name"
                                                },
                                                "buyer": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "seller": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "action_done_by": {
                                                    "type": "string",
                                                    "example": "BUYER"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-24 10:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-06-24 10:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "No data found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/validateTrade/{id}": {
            "post": {
                "tags": [
                    "Trade"
                ],
                "summary": "Validate a trade",
                "description": "Set admin_validate to true for a given trade.",
                "operationId": "validateTrade",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the trade to validate",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade validated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade validated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Trade not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/getAllTrades/{perpage}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get all trades",
                "description": "Retrieve a list of all trades.",
                "operationId": "getAllTrades",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of element perpage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all trades",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/trade/getUnvalidatedTrades/{perpage}": {
            "get": {
                "tags": [
                    "Trade"
                ],
                "summary": "Get unvalidated trades",
                "description": "Retrieve a list of trades that are not yet validated.",
                "operationId": "getUnvalidatedTrades",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "path",
                        "description": "number of element perpage",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of unvalidated trades",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": ""
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeStage/createTradeStage": {
            "post": {
                "tags": [
                    "TradeStage"
                ],
                "summary": "Create a trade stage",
                "operationId": "2fcfd68b276570ac7dd845ebc030e8ae",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stage_title": {
                                        "type": "string",
                                        "example": "Stage Title"
                                    },
                                    "steporder": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "yes_action": {
                                        "type": "string",
                                        "example": "Action 1"
                                    },
                                    "no_action": {
                                        "type": "string",
                                        "example": "Action 2"
                                    },
                                    "action_done_by": {
                                        "type": "string",
                                        "example": "BUYER"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trade stage created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeStage/displayTradeStages/{tradeStageId}": {
            "get": {
                "tags": [
                    "TradeStage"
                ],
                "summary": "Display Trade Stage",
                "description": "Afficher un Trade Stage spécifique par ID",
                "operationId": "1a3f62f961d85453bfc858e868e06f66",
                "parameters": [
                    {
                        "name": "tradeStageId",
                        "in": "path",
                        "description": "ID du Trade Stage",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade stage found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Trade stage not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "string",
                                            "example": "trade stage not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeStage/updateTradeStage/{tradeStageId}": {
            "post": {
                "tags": [
                    "TradeStage"
                ],
                "summary": "Update a trade stage",
                "operationId": "3e455ffe3eeb038f81c42ff7d4a03650",
                "parameters": [
                    {
                        "name": "tradeStageId",
                        "in": "path",
                        "description": "ID of the trade stage",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "stage_title": {
                                        "type": "string",
                                        "example": "Updated Stage Title"
                                    },
                                    "steporder": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "yes_action": {
                                        "type": "string",
                                        "example": "Updated Action 1"
                                    },
                                    "no_action": {
                                        "type": "string",
                                        "example": "Updated Action 2"
                                    },
                                    "previous_step_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "next_step_id": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Trade stage updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade stage updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeStage/index": {
            "get": {
                "tags": [
                    "TradeStage"
                ],
                "summary": "List Trade Stages",
                "description": "Lister tous les Trade Stages dont le champ deleted est à false",
                "operationId": "50e3d1eb8f74210224d21bd6ebe6b249",
                "responses": {
                    "200": {
                        "description": "List of trade stages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tradeStage/delete/{id}": {
            "post": {
                "tags": [
                    "TradeStage"
                ],
                "summary": "Delete Trade Stage",
                "description": "Modifier la valeur du champ deleted à true",
                "operationId": "19b5ec53f5f5487c7d8d62c0c79bdec9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Trade Stage to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Trade Stage deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Trade Stage deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Trade Stage not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Trade Stage not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/transaction/getUserTransactions": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Get all transactions for the authenticated user",
                "operationId": "cc1a22254f7b5dd30acab919b24e6da8",
                "parameters": [
                    {
                        "name": "perpage",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "sent_transactions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        },
                                        "received_transactions": {
                                            "type": "array",
                                            "items": {
                                                "$ref": ""
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/typeoftype/store": {
            "post": {
                "tags": [
                    "TypeOfType"
                ],
                "summary": "Create a new TypeOfType",
                "description": "Créer un nouveau TypeOfType",
                "operationId": "0acb95e884d6bbcdb337883943301c5f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "libelle": {
                                        "type": "string",
                                        "example": "New TypeOfType"
                                    },
                                    "codereference": {
                                        "type": "string",
                                        "example": "REF123"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "TypeOfType created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "TypeOfType created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/typeoftype/show/{id}": {
            "get": {
                "tags": [
                    "TypeOfType"
                ],
                "summary": "Get TypeOfType by ID",
                "description": "Récupérer un TypeOfType spécifique par son ID",
                "operationId": "064b68d707428305241593184b8a83e1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du TypeOfType à récupérer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TypeOfType retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": ""
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TypeOfType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "TypeOfType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/typeoftype/update/{id}": {
            "post": {
                "tags": [
                    "TypeOfType"
                ],
                "summary": "Update TypeOfType",
                "description": "Mettre à jour un TypeOfType spécifique par son ID",
                "operationId": "cf3c87387e51db1eca0d56c675bdc1da",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du TypeOfType à mettre à jour",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "libelle": {
                                        "type": "string",
                                        "example": "Nouveau libellé"
                                    },
                                    "codereference": {
                                        "type": "string",
                                        "example": "Nouveau code de référence"
                                    },
                                    "parent_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "TypeOfType updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "TypeOfType updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TypeOfType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "TypeOfType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/typeoftype/delete/{id}": {
            "post": {
                "tags": [
                    "TypeOfType"
                ],
                "summary": "Delete TypeOfType",
                "description": "Supprimer un TypeOfType spécifique par son ID",
                "operationId": "8901bb925490ad5b769ed4ce6b549504",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID du TypeOfType à supprimer",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "TypeOfType deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "TypeOfType deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "TypeOfType not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "TypeOfType not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/validateEmail": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Valider un e-mail",
                "description": "Valide si l'e-mail fourni existe dans la base de données",
                "operationId": "961c0b41a8c9c5a9795072c166395456",
                "requestBody": {
                    "description": "Données d'entrée requises",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "E-mail valide",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "E-mail valide"
                                        },
                                        "data": {
                                            "$ref": ""
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "E-mail invalide",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "E-mail invalide"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/restrictedUser": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Ajouter un utilisateur restreint",
                "description": "Ajoute un utilisateur restreint à la base de données avec son email et adresse IP.",
                "operationId": "13d79d5baadcf70e897b527903b39091",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "L'email de l'utilisateur à restreindre",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "ip_address": {
                                        "description": "L'adresse IP de l'utilisateur à restreindre",
                                        "type": "string",
                                        "format": "ipv4"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message de succès",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Détails de l'erreur de validation",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Détails de l'erreur serveur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Connexion de l'utilisateur",
                "description": "Authentifie l'utilisateur et renvoie un jeton d'accès en cas de succès.",
                "operationId": "c9b20e2431404b7383ce7e626b4b6f05",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "description": "Nom d'utilisateur (email ou numéro de téléphone)",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "Mot de passe de l'utilisateur",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Connexion réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "$ref": ""
                                        },
                                        "access_token": {
                                            "description": "Jeton d'accès JWT",
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "description": "Type de jeton (Bearer)",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Détails de l'erreur de validation",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Détails de l'erreur serveur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Enregistrer un nouvel utilisateur",
                "description": "Crée un nouvel utilisateur avec l'email, le numéro de téléphone et le mot de passe fournis.",
                "operationId": "758e750cf3b7f1b6a9c906c443a12b83",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "phone",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "phone": {
                                        "description": "Numéro de téléphone de l'utilisateur (format international avec le préfixe +)",
                                        "type": "integer"
                                    },
                                    "country_id": {
                                        "description": "Numéro de téléphone de l'utilisateur (format international avec le préfixe +)",
                                        "type": "integer"
                                    },
                                    "email": {
                                        "description": "Adresse e-mail de l'utilisateur",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Mot de passe de l'utilisateur (au moins 8 caractères, une lettre majuscule, un chiffre et un caractère spécial)",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation du mot de passe de l'utilisateur",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Utilisateur créé avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message de succès",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur de validation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Détails de l'erreur de validation",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Détails de l'erreur serveur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Déconnexion de l'utilisateur",
                "description": "Déconnecte l'utilisateur authentifié.",
                "operationId": "3f4630f2faa114f9a6495b04588632ec",
                "responses": {
                    "200": {
                        "description": "Déconnexion réussie",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message de succès",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Détails de l'erreur serveur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Obtenir les informations de l'utilisateur authentifié",
                "description": "Renvoie les informations de l'utilisateur authentifié.",
                "operationId": "c4c131a523d50505e9c9f3c1fe2e43b5",
                "responses": {
                    "200": {
                        "description": "Informations de l'utilisateur récupérées avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Détails de l'utilisateur authentifié"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Non autorisé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Message d'erreur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Détails de l'erreur serveur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/getUser": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Obtenir la liste des utilisateurs",
                "description": "Renvoie la liste de tous les utilisateurs enregistrés dans le système.",
                "operationId": "7b2f143e1d6d6e9d878d4729986829f5",
                "responses": {
                    "200": {
                        "description": "Liste des utilisateurs récupérée avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Liste des utilisateurs avec leurs informations",
                                            "type": "array",
                                            "items": {}
                                        },
                                        "total_users": {
                                            "description": "Nombre total d'utilisateurs dans le système",
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Détails de l'erreur serveur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/updatePassword": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Mettre à jour le mot de passe de l'utilisateur",
                "description": "Permet à l'utilisateur de mettre à jour son mot de passe.",
                "operationId": "146bab92f4aed7ee78df5b7aafbe7101",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "old_password",
                                    "new_password"
                                ],
                                "properties": {
                                    "old_password": {
                                        "description": "Ancien mot de passe de l'utilisateur",
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "new_password": {
                                        "description": "Nouveau mot de passe de l'utilisateur (au moins 8 caractères)",
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Mot de passe mis à jour avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message de succès",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Message d'erreur de validation",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Détails de l'erreur serveur",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/password_recovery_start_step": {
            "post": {
                "tags": [
                    "Password Recovery"
                ],
                "summary": "Start the password recovery process",
                "operationId": "4dd79f72520ba36f75296add7f5464b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Email not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Email not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "The email field is required."
                                                }
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/password_recovery_second_step": {
            "post": {
                "tags": [
                    "Password Recovery"
                ],
                "summary": "Complete the password recovery process",
                "description": "Validate the OTP code and mark it as used if valid. Sends a notification email if the OTP code is expired.",
                "operationId": "7cd7d06fde183ac2d3d32c79fd8de995",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "otp_code"
                                ],
                                "properties": {
                                    "otp_code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful response with OTP validation result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "otp valide"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Code OTP not found or already used",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Code OTP non trouvé ou déjà utilisé"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "otp_code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The otp_code field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/password_recovery_end_step/{uid}": {
            "post": {
                "tags": [
                    "Password Recovery"
                ],
                "summary": "Complete the password recovery process",
                "description": "Update the user's password after successful recovery.",
                "operationId": "eeca38cbf93f6d5e1b36c5fa1e682cf7",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "User's uid ",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                },
                                                "password_confirmation": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/disabledUser/{uid}": {
            "post": {
                "tags": [
                    "Password Recovery"
                ],
                "summary": "Disable a user",
                "description": "Disable a user account by setting the 'enabled' field to false.",
                "operationId": "a1390a76feb116dbbf0d7426f183288b",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "query",
                        "description": "User's unique identifiant",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User disabled successfully or user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User disabled successfully !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found !"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/verification_code": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Vérification du code de vérification",
                "description": "Vérifie le code de vérification envoyé par l'utilisateur.",
                "operationId": "cc4b0bf36d50d7f0890f21e2c28d0d46",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "description": "Le code de vérification à vérifier."
                                    }
                                },
                                "required": "code"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Échec de la vérification",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "description": "Le code d'état de la réponse.",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Le message indiquant que la vérification a échoué.",
                                            "type": "string",
                                            "example": "Check failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "description": "Le code d'état de la réponse.",
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "message": {
                                            "description": "Le message d'erreur détaillé.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "Réponse par défaut pour les autres cas",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "description": "Le code d'état de la réponse.",
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "description": "Le message indiquant que la vérification a réussi.",
                                            "type": "string",
                                            "example": "Verification passed"
                                        },
                                        "verification": {
                                            "description": "Le code de vérification vérifié.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/new_code/{id}": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate a new code for user",
                "operationId": "10a0d0dd091b9fba3f38528b37c1c465",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Code sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Code sent successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "This id does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "This id does not exist"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/users/regenerateToken": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Régénère un jeton d'accès pour un utilisateur connecté",
                "description": "Cette route permet de régénérer un jeton JWT pour un utilisateur existant en fonction de son UID.",
                "operationId": "regenerateToken",
                "responses": {
                    "200": {
                        "description": "Jeton régénéré avec succès",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "description": "Jeton d'accès régénéré",
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token regénéré pour l'utilisateur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Utilisateur non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur interne du serveur",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Erreur interne du serveur"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/zone/index/{paginate}": {
            "get": {
                "tags": [
                    "Zones"
                ],
                "summary": "List all zones with pagination",
                "operationId": "3a5d9b5da09677e8f0f6bf805c39f93d",
                "parameters": [
                    {
                        "name": "paginate",
                        "in": "path",
                        "description": "Number of items per page (maximum 100)",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 20
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of zones",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "uid": {
                                                                "type": "string"
                                                            },
                                                            "city_name": {
                                                                "type": "string"
                                                            },
                                                            "latitude": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "longitude": {
                                                                "type": "number",
                                                                "format": "float"
                                                            },
                                                            "country_id": {
                                                                "type": "integer"
                                                            },
                                                            "active": {
                                                                "type": "boolean"
                                                            },
                                                            "deleted": {
                                                                "type": "boolean"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "first_page_url": {
                                                    "type": "string"
                                                },
                                                "from": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "last_page_url": {
                                                    "type": "string"
                                                },
                                                "next_page_url": {
                                                    "type": "string"
                                                },
                                                "path": {
                                                    "type": "string"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "prev_page_url": {
                                                    "type": "string"
                                                },
                                                "to": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/zone/store": {
            "post": {
                "tags": [
                    "Zones"
                ],
                "summary": "Store a new delivery zone",
                "operationId": "ba210df06d90aa21b9868b7c73d6bf48",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "latitudes": {
                                        "description": "Array of latitudes",
                                        "type": "array",
                                        "items": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "longitudes": {
                                        "description": "Array of longitudes",
                                        "type": "array",
                                        "items": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Zone saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Zone saved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer",
                                            "example": 500
                                        },
                                        "data": {
                                            "type": "object",
                                            "example": []
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/zone/destroy/{uid}": {
            "post": {
                "tags": [
                    "Zones"
                ],
                "summary": "Delete a zone by UID",
                "operationId": "47c6a5fa9b586278f699f441e75bb095",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "UID of the zone to delete",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zone deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Zone not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/zone/makeZoneActiveOrNot/{uid}": {
            "post": {
                "tags": [
                    "Zones"
                ],
                "summary": "Activate or deactivate a zone by UID",
                "operationId": "9aa1a838e6e0f6def76efb9ec74ad7d3",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "UID of the zone to activate/deactivate",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Zone status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Zone not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/zone/update/{uid}": {
            "post": {
                "tags": [
                    "Zones"
                ],
                "summary": "Update a zone by UID",
                "operationId": "1f9a77a2849cff67239b1b890a50eec8",
                "parameters": [
                    {
                        "name": "uid",
                        "in": "path",
                        "description": "UID of the zone to update",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "city_name": {
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "type": "number"
                                    },
                                    "longitude": {
                                        "type": "number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Zone updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Zone not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status_code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}